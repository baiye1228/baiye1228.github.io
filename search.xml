<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>python初识感想</title>
    <url>/2020/10/11/python%E5%88%9D%E8%AF%86%E6%84%9F%E6%83%B3/</url>
    <content><![CDATA[<h2 id="感想"><a href="#感想" class="headerlink" title="感想"></a>感想</h2><p>因为一开始接触的是C/C++，所以在学习python的过程中，我很自然的将两者进行对比，现阶段的感受就是python像是C++的简单版本。</p>
<a id="more"></a>
<p>我喜欢将python的编写看成是一个搭“积木”的过程，基础语法是连接每块“积木”的小零件，python中所包含的模块，第三方库就是一个个前辈帮忙制作的“积木”，每一个“积木”有着不同的“接口”——函数，我们通过使用语法来连接这些“接口”，从而实现我们所需要的功能。</p>
<img src="/2020/10/11/python%E5%88%9D%E8%AF%86%E6%84%9F%E6%83%B3/wallhaven-oxro8m_1920x1080.png" class title="我的世界">
<p>同样python与《我的世界》这款游戏非常的相似，《我的世界》除了原版的玩法之外，还有各路大神制作的各种mod，这些mod为玩家提供了不同且丰富多样玩法。我们反观python，是不是非常的相像？</p>
<h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>当然，编程的道路对我来说是一个对其认知不断改变的过程，随着后续的学习，先前的理解可能就会显得不是那么的形象贴切，但这并不影响我将之简单化看待的心，所以不必只拘泥一种思考，有觉得更好的思考及理解拿来用便是。</p>
]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>python学习笔记(一)之变量及输入输出</title>
    <url>/2020/10/05/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E4%B8%80-%E4%B9%8B%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA/</url>
    <content><![CDATA[<h2 id="第一个程序"><a href="#第一个程序" class="headerlink" title="第一个程序"></a>第一个程序</h2><p>在C++中我所认识到的第一个程序，也是所有学习编程语言第一个编写到的程序“hello world”，<a id="more"></a>下面是C++中实现的代码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#include&lt;iostream&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line">int <span class="function"><span class="title">main</span></span>()&#123;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;hello world&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>而这一程序在python中仅需一行代码，代码如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;hello world&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>从这一程序其实就能窥见python编写的简单。</p>
<h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><p>在程序设计中，变量是一种存储数据的载体。计算机中的变量是实际存在的数据或者说是存储器中存储数据的一块内存空间，变量的值可以被读取和修改，这是所有计算和控制的基础。</p>
<h3 id="变量命名"><a href="#变量命名" class="headerlink" title="变量命名"></a>变量命名</h3><p>变量命名规则：</p>
<pre><code>1.变量名只能是字母，数字和下划线的任意组合
2.变量名第一个字符不能是数字
3.变量名区分大小写，大小写字母被认为是两个不同的字符
4.特殊关键字不能命名为变量名</code></pre>
<p>python中我们不能将特殊的关键字用作任何变量名称，也就是有那么多名字可以起，别盯着这些有特殊功能的关键字不放。python 的标准库提供了一个 keyword 模块，可以输出当前版本的所有关键字：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; import keyword</span><br><span class="line">&gt;&gt;&gt; keyword.kwlist</span><br><span class="line">[<span class="string">&#x27;False&#x27;</span>, <span class="string">&#x27;None&#x27;</span>, <span class="string">&#x27;True&#x27;</span>, <span class="string">&#x27;and&#x27;</span>, <span class="string">&#x27;as&#x27;</span>, <span class="string">&#x27;assert&#x27;</span>, <span class="string">&#x27;break&#x27;</span>, <span class="string">&#x27;class&#x27;</span>, <span class="string">&#x27;continue&#x27;</span>, <span class="string">&#x27;def&#x27;</span>, <span class="string">&#x27;del&#x27;</span>, <span class="string">&#x27;elif&#x27;</span>, <span class="string">&#x27;else&#x27;</span>, <span class="string">&#x27;except&#x27;</span>, <span class="string">&#x27;finally&#x27;</span>, <span class="string">&#x27;for&#x27;</span>, <span class="string">&#x27;from&#x27;</span>, <span class="string">&#x27;global&#x27;</span>, <span class="string">&#x27;if&#x27;</span>, <span class="string">&#x27;import&#x27;</span>, <span class="string">&#x27;in&#x27;</span>, <span class="string">&#x27;is&#x27;</span>, <span class="string">&#x27;lambda&#x27;</span>, <span class="string">&#x27;nonlocal&#x27;</span>, <span class="string">&#x27;not&#x27;</span>, <span class="string">&#x27;or&#x27;</span>, <span class="string">&#x27;pass&#x27;</span>, <span class="string">&#x27;raise&#x27;</span>, <span class="string">&#x27;return&#x27;</span>, <span class="string">&#x27;try&#x27;</span>, <span class="string">&#x27;while&#x27;</span>, <span class="string">&#x27;with&#x27;</span>, <span class="string">&#x27;yield&#x27;</span>]</span><br></pre></td></tr></table></figure>

<h3 id="创建变量"><a href="#创建变量" class="headerlink" title="创建变量"></a>创建变量</h3><p>与其他编程语言不同，Python 没有声明变量的命令。首次为其赋值时，才会创建变量。<br><strong>实例：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">x=10</span><br><span class="line">y=<span class="string">&#x27;Tom&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(x)</span><br><span class="line"><span class="built_in">print</span>(y)</span><br></pre></td></tr></table></figure>

<p>变量不需要使用任何特定类型声明，甚至可以在设置后更改其类型。<strong>实例：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">x = 5 <span class="comment"># x is of type int</span></span><br><span class="line">x = <span class="string">&quot;Steve&quot;</span> <span class="comment"># x is now of type str</span></span><br></pre></td></tr></table></figure>

<p>字符串变量可以使用单引号或双引号进行声明。<strong>实例：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">x = <span class="string">&quot;Tom&quot;</span></span><br><span class="line"><span class="comment"># is the same as</span></span><br><span class="line">y = <span class="string">&#x27;Tom&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(id(x))</span><br><span class="line"><span class="built_in">print</span>(id(y))</span><br></pre></td></tr></table></figure>

<p>运行上述实例，我们可以发现两个变量的地址是一模一样的。</p>
<h3 id="向多个变量赋值"><a href="#向多个变量赋值" class="headerlink" title="向多个变量赋值"></a>向多个变量赋值</h3><p>python 允许您在一行中为多个变量赋值。<strong>实例：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">x, y, z = <span class="string">&quot;Orange&quot;</span>, <span class="string">&quot;Banana&quot;</span>, <span class="string">&quot;Cherry&quot;</span></span><br><span class="line"><span class="built_in">print</span>(x)</span><br><span class="line"><span class="built_in">print</span>(y)</span><br><span class="line"><span class="built_in">print</span>(z)</span><br></pre></td></tr></table></figure>

<p>也可以在一行中为多个变量分配相同的值。<strong>实例：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">x = y = z = <span class="string">&quot;Orange&quot;</span></span><br><span class="line"><span class="built_in">print</span>(x)</span><br><span class="line"><span class="built_in">print</span>(y)</span><br><span class="line"><span class="built_in">print</span>(z)</span><br></pre></td></tr></table></figure>

<h2 id="输出之print-函数"><a href="#输出之print-函数" class="headerlink" title="输出之print()函数"></a>输出之print()函数</h2><p><strong>print()</strong> 方法用于打印输出，最常见的一个函数。</p>
<h3 id="print函数语法"><a href="#print函数语法" class="headerlink" title="print函数语法"></a>print函数语法</h3><p>以下是 print() 方法的语法:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(object(s), separator=separator, end=end, file=file, flush=flush)</span><br></pre></td></tr></table></figure>

<h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><table>
<thead>
<tr>
<th>参数</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>object(s)</td>
<td>任何对象，以及任意数量。打印前将转换为字符串。</td>
</tr>
<tr>
<td>sep=’separator’</td>
<td>可选。指定如何分隔对象，如果存在多个对象。默认值为 ‘ ‘。</td>
</tr>
<tr>
<td>end=’end’</td>
<td>可选。可选的。指定要在末尾打印的内容。默认值为 ‘\n’（换行符）。</td>
</tr>
<tr>
<td>file</td>
<td>可选。有写入方法的对象。默认为 sys.stdout。</td>
</tr>
<tr>
<td>flush</td>
<td>可选的。布尔值，指定输出是刷新（True）还是缓冲（False）。默认为 False。</td>
</tr>
</tbody></table>
<h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;<span class="built_in">print</span>(1)  </span><br><span class="line">1  </span><br><span class="line">&gt;&gt;&gt; <span class="built_in">print</span>(<span class="string">&quot;Hello World&quot;</span>)  </span><br><span class="line">Hello World  </span><br><span class="line"> </span><br><span class="line">&gt;&gt;&gt; a = 1</span><br><span class="line">&gt;&gt;&gt; b = <span class="string">&#x27;runoob&#x27;</span></span><br><span class="line">&gt;&gt;&gt; <span class="built_in">print</span>(a,b)</span><br><span class="line">1 runoob</span><br><span class="line"> </span><br><span class="line">&gt;&gt;&gt; <span class="built_in">print</span>(<span class="string">&quot;aaa&quot;</span><span class="string">&quot;bbb&quot;</span>)</span><br><span class="line">aaabbb</span><br><span class="line">&gt;&gt;&gt; <span class="built_in">print</span>(<span class="string">&quot;aaa&quot;</span>,<span class="string">&quot;bbb&quot;</span>)</span><br><span class="line">aaa bbb</span><br><span class="line">&gt;&gt;&gt; </span><br><span class="line"> </span><br><span class="line">&gt;&gt;&gt; <span class="built_in">print</span>(<span class="string">&quot;www&quot;</span>,<span class="string">&quot;runoob&quot;</span>,<span class="string">&quot;com&quot;</span>,sep=<span class="string">&quot;.&quot;</span>)  <span class="comment"># 设置间隔符</span></span><br><span class="line">www.runoob.com</span><br></pre></td></tr></table></figure>

<h2 id="输入之input-函数"><a href="#输入之input-函数" class="headerlink" title="输入之input()函数"></a>输入之input()函数</h2><p>Python3.x 中 input() 函数接受一个标准输入数据，返回为 string 类型。也就是说通过这一函数输入的任何信息都是string类型，如需要其他类型则要进行强制转换。</p>
<h3 id="input函数语法"><a href="#input函数语法" class="headerlink" title="input函数语法"></a>input函数语法</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">input([prompt])</span><br></pre></td></tr></table></figure>

<p>prompt: 执行输入时的提示信息。</p>
<h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>想了一会儿，这一系列不是教程，而是对以前学习的一个总结，帮助自己，或是别人查缺补漏，所以尽量不多说废话。当然，会穿插自己对某些知识点的看法。编程的路远，唯有坚持！！</p>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>笔记</tag>
      </tags>
  </entry>
</search>
